{"version":3,"sources":["media/doorIntercom.jpg","media/led-matrix/main.jpg","media/NeeharikaVResume.pdf","media/activealarm.jpg","media/triviaMachine.jpg","logo.svg","media/myface.jpg","media/doorIntercomDiagram.png","media/led-matrix/strips.jpg","media/led-matrix/test.jpg","media/led-matrix/connect.jpg","media/led-matrix/rainbow.jpg","media/led-matrix/tedx.jpg","components/navBar.jsx","components/footer.jsx","components/home.jsx","components/about.jsx","components/doorIntercom.jsx","components/ledMatrix.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","state","Fragment","class","href","id","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","this","props","projects","map","project","key","link","target","title","Component","Footer","style","marginTop","marginBottom","color","Home","textAlign","fontSize","src","image","alt","description","About","marginLeft","marginRight","margin","require","borderRadius","resume","DoorIntercom","LedMatrix","ledMatrixPic","activeAlarmPic","triviaMachinePic","doorIntercomPic","App","basename","className","exact","path","render","component","LEDMatrix","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0d07d2c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/doorIntercom.18be5317.jpg\";","module.exports = __webpack_public_path__ + \"static/media/main.f7b299fb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/NeeharikaVResume.b6782200.pdf\";","module.exports = __webpack_public_path__ + \"static/media/activealarm.afe46705.jpg\";","module.exports = __webpack_public_path__ + \"static/media/triviaMachine.d6c6db12.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/myface.65e8f546.jpg\";","module.exports = __webpack_public_path__ + \"static/media/doorIntercomDiagram.324801bc.png\";","module.exports = __webpack_public_path__ + \"static/media/strips.1f57182f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/test.48edd11d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/connect.d91d3f98.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rainbow.c4732524.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tedx.ecfb7945.jpg\";","import React, { Component } from \"react\";\nimport \"./navBar.css\";\nimport \"./overrideFont.css\";\n\nclass NavBar extends Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <nav class=\"navbar my-1 mx-5\">\n          <a class=\"navbar-brand my-logo pixel-font\" href=\"#\">\n            neeharika vogety\n          </a>\n          <ul class=\"nav justify-content-end main-font\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link active\" href=\"/\">\n                Home\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"/#/about\">\n                About\n              </a>\n            </li>\n            <li class=\"nav-item dropdown\">\n              <a\n                class=\"nav-link dropdown-toggle\"\n                href=\"#\"\n                id=\"navbarDropdownMenuLink\"\n                role=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                Projects\n              </a>\n              <div\n                class=\"dropdown-menu dropdown-menu-right\"\n                aria-labelledby=\"navbarDropdownMenuLink\"\n              >\n                {this.props.projects.map((project) => (\n                  <a\n                    key={project.id}\n                    class=\"dropdown-item\"\n                    href={project.link}\n                    target=\"_blank\"\n                  >\n                    {project.title}\n                  </a>\n                ))}\n              </div>\n            </li>\n          </ul>\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport \"./footer.css\";\nimport \"./overrideFont.css\";\n\nclass Footer extends Component {\n  state = {};\n  render() {\n    return (\n      <footer class=\"footer\">\n        <div\n          class=\"container main-font\"\n          style={{ marginTop: \"30px\", marginBottom: \"30px\" }}\n        >\n          <hr />\n          <span>\n            Made with <span style={{ color: \"#e25555\" }}>&#9829;</span> by\n            Neeharika Vogety\n          </span>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./pages.css\";\nimport \"./overrideFont.css\";\n\nclass Home extends Component {\n  state = {};\n  render() {\n    return (\n      <div class=\"container adjust-font\">\n        <div style={{ textAlign: \"left\", marginTop: \"5%\" }}>\n          <h1 class=\"title pixel-font\">Hi, I'm Neeharika.</h1>\n          <p class=\"bio main-font\" style={{ marginBottom: \"5%\" }}>\n            I'm a student at{\" \"}\n            <a href=\"https://www.cmu.edu/\" target=\"_blank\">\n              Carnegie Mellon\n            </a>{\" \"}\n            studying{\" \"}\n            <a href=\"https://www.ece.cmu.edu/index.html\" target=\"_blank\">\n              Electrical and Computer Engineering\n            </a>\n            . I like making fun things with code! Below are some of the things\n            I've worked on that I'm proud of. You can learn more about me{\" \"}\n            <a href=\"/#/about\">here</a>.{\"    \"}\n            <span style={{ fontSize: \"0.75rem\" }}>\n              *note: this website is a work-in-progress!\n            </span>\n          </p>\n        </div>\n\n        <div class=\"card-columns\">\n          {this.props.projects.map((project) => (\n            <div key={project.id} class=\"card\">\n              <img\n                class=\"card-img-top\"\n                src={project.image}\n                alt={project.title}\n              />\n              <div class=\"card-body main-font\">\n                <h4>\n                  <a class=\"card-title\" href={project.link}>\n                    <b>{project.title}</b>\n                  </a>\n                </h4>\n                <p class=\"card-text\">{project.description}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport \"./pages.css\";\nimport \"./about.css\";\nimport \"./overrideFont.css\";\nimport resume from \"../media/NeeharikaVResume.pdf\";\n\nclass About extends Component {\n  state = {};\n  render() {\n    return (\n      <div\n        class=\"box\"\n        style={{\n          marginTop: \"5%\",\n          marginBottom: \"5%\",\n          marginLeft: \"5%\",\n          marginRight: \"5%\",\n        }}\n      >\n        <div class=\"flex-third\" style={{ margin: \"5% 0% 10% 0%\" }}>\n          <img\n            src={require(\"../media/myface.jpg\")}\n            alt=\"Neeharika's Face\"\n            style={{ borderRadius: \"50%\" }}\n          />\n        </div>\n        <div\n          class=\"flex-two-thirds main-font\"\n          style={{ textAlign: \"left\", marginLeft: \"5%\", marginRight: \"5%\" }}\n        >\n          <p>\n            Hi, I’m Neeharika Vogety, and I’m a student and programmer. I’m\n            comfortable working in any part of the software development process,\n            from very backend infrastructure design to front-facing web\n            development. In fact, I really enjoy thinking of systems designs as\n            a whole, and most of my projects involve end-to-end solutions. In\n            the past, I worked as a full-stack software engineering intern at{\" \"}\n            <a href=\"https://www.platinasystems.com/\" target=\"_blank\">\n              Platina Systems\n            </a>\n            ,{\" \"}\n            <a href=\"https://nianticlabs.com/en/\" target=\"_blank\">\n              Niantic\n            </a>{\" \"}\n            (Pokémon Go team), and soon to be{\" \"}\n            <a href=\"https://www.twitch.tv/\" target=\"_blank\">\n              Twitch\n            </a>\n            . Some of my\n            interests include playing with hobby electronics, game dev, digital\n            illustration, and basically anything fun and creative.\n          </p>\n          <p>\n            I’m currently getting my Bachelor’s in{\" \"}\n            <a href=\"https://www.ece.cmu.edu/index.html\" target=\"_blank\">\n              ECE\n            </a>{\" \"}\n            @{\" \"}\n            <a href=\"https://www.cmu.edu/\" target=\"_blank\">\n              CMU\n            </a>\n            , class of 2022. Go{\" \"}\n            <a href=\"https://en.wikipedia.org/wiki/Tartan\" target=\"_blank\">\n              Tartans\n            </a>\n            !\n          </p>\n          <p>\n            <a href={resume} target=\"_blank\">\n              Resume\n            </a>\n          </p>\n          <p>\n            <a\n              href=\"https://www.linkedin.com/in/nvogety/\"\n              target=\"_blank\"\n              class=\"fab fa-linkedin icons\"\n            ></a>{\" \"}\n            <a\n              href=\"https://github.com/nvogety\"\n              target=\"_blank\"\n              class=\"fab fa-github icons\"\n            ></a>{\" \"}\n            <a\n              href=\"mailto:nvogety@gmail.com\"\n              target=\"_blank\"\n              class=\"fas fa-envelope icons\"\n            ></a>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport \"./pages.css\";\nimport \"./overrideFont.css\";\n\nclass DoorIntercom extends Component {\n  state = {};\n  render() {\n    return (\n      <div class=\"container main-font\">\n        <div style={{ textAlign: \"left\", marginTop: \"5%\" }}>\n          <img\n            src={require(\"../media/doorIntercom.jpg\")}\n            alt=\"Door intercom system\"\n            class=\"center resize-pic\"\n          />\n          <h1 class=\"title pixel-font\">Door Intercom w/ Amazon Alexa</h1>\n          <div class=\"project-body\">\n            <h4 class=\"section-header\">Services used:</h4>\n\n            <ul>\n              <li>Amazon Alexa Skill Kit</li>\n              <li>AWS Lambda</li>\n              <li>AWS IoT</li>\n              <li>IBM Watson Speech-to-Text and Text-to-Speech</li>\n              <li>AWS Dynamo DB</li>\n            </ul>\n\n            Written in completely in <b>Node.js</b> (Yay for hardware + js!)\n\n            <br/>\n            <br/>\n\n            <h4 class=\"section-header\">Idea:</h4>\n\n            The idea behind this project was to simulate a door intercom system\n            within a single call to Alexa. You can tell Alexa \"Alexa, send this\n            message: [your-message]\", and that message will be processed and\n            relayed outside through a set of speakers connected to a{\" \"}\n            <b>Raspberry Pi</b>. The person at the door then has a chance to send a\n            short message themselves, which is then relayed back to you through\n            the Alexa. This all should happen in one call to the Alexa, and\n            therefore takes quite a bit of services to make this all work. See the flow\n            diagram below.\n            <img\n              src={require(\"../media/doorIntercomDiagram.png\")}\n              alt=\"Flow diagram for the door intercom system\"\n              style={{ margin: \"5% 5% 5% 5%\" }}\n              class=\"resize-pic\"\n            />\n\n            <h4 class=\"section-header\">Explanation:</h4>\n\n            The first step is to use the <b>Alexa Skill Kit</b> and <b>AWS Lambda</b> to extract the message a user wants to deliver.\n            Then, the Lambda function publishes data to a <b>AWS IoT</b> topic stream, and other devices\n            can subscribe to that stream and get that data. After all, AWS IoT is a MQTT pub/sub service under the hood.\n            In this case, I have the Lambda function publishing on a specific stream that my Raspberry Pi is\n            subscribed to. In a parallel fashion, the Pi can publish to another\n            stream that the <b>Dynamo Database</b>, and subsequently the Lambda function, is\n            reading off of. This is a great way to send messages back and forth!\n\n            <br/>\n            <br/>\n\n            On receiving this message from Alexa, the Pi uses IBM’s\n            text-to-speech service to convert the string into an .wav audio\n            file. It plays this message on two external speakers. A separate USB\n            microphone that is also hooked up to the Pi starts recording,\n            waiting for the visitor to say something back. That recording is\n            also saved as a file, which is passed through IBM’s speech-to-text\n            service, and outputs a string. I’m publishing that string, the\n            visitor’s message, to a separate topic stream that the Dynamo\n            database is keeping track of. The Lambda function checks for any\n            update to the database and if so, it will read this out. This is all\n            on one call to Alexa!\n\n            <br/>\n            <br/>\n          \n            Note: The <i>asynchronous</i> nature of Node.js/JS was a huge issue in this project. For example,\n            audio files would start playing before they were even finished processing!\n            The quick fix for this was using a <b>execSync</b> library to simulate synchronous calls.{\" \"}\n          \n            <br/>\n            <br/>\n\n            <h4 class=\"section-header\">Code:</h4>\n\n            \n            <p>\n              Github Repo with all the code{\" \"}\n              <a href=\"https://github.com/nvogety/Alexa-Code\" target=\"_blank\">\n              here\n              </a>.\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DoorIntercom;\n","import React, { Component } from \"react\";\nimport \"./pages.css\";\nimport \"./overrideFont.css\";\n\nclass LedMatrix extends Component {\n    state = {};\n    render() {\n      return (\n        <div class=\"container main-font\">\n          <div style={{ textAlign: \"left\", marginTop: \"5%\" }}>\n            <img\n              src={require(\"../media/led-matrix/main.jpg\")}\n              alt=\"Demo of the LED Matrix\"\n              class=\"center resize-pic\"\n            />\n            <h1 class=\"title pixel-font\">LED Matrix</h1>\n            <div class=\"project-body\">\n              <p>Built with{\" \"}\n                <a href=\"https://bennetthuffman.com/\" target=\"_blank\">Bennett H.</a>, {\" \"}\n                <a href=\"https://dijour.com/\" target=\"_blank\">Dean D.</a>, {\" \"}\n                <a href=\"https://kazijawad.nyc/\" target=\"_blank\">Kazi J.</a>, \n                and Eshita S. \n                as a part of{\" \"}\n                <a href=\"https://tedxcmu.org/\" target=\"_blank\">TEDxCMU</a>.\n              </p>\n\n\n              <h4 class=\"section-header\">Materials used:</h4>\n  \n              <ul>\n                <li>Arduino Mega</li>\n                <li>Several RGB LED Strips</li>\n                <li>Power Supplies</li>\n                <li>Large Acrylic Sheets</li>\n              </ul>\n  \n  \n              <h4 class=\"section-header\">Idea:</h4>\n  \n              This project was initially created for an in-person TEDxCMU event in the Spring of \n              2020 as a way to attract and engage event-goers in a creative way. The matrix would \n              be able to show images, loop through animations, and potentially have users be able \n              to draw on it like a canvas via the event’s mobile app. The 2020 event was indefinitely\n              put off because of the coronavirus pandemic, so this LED matrix was never able to \n              be in the public eye. However, it was an incredibly fun experience to program and build! \n              Here are some pictures of our process.\n              <br/>\n              \n              <img\n                src={require(\"../media/led-matrix/strips.jpg\")}\n                alt=\"Matrix strips\"\n                style={{ margin: \"5% 5% 5% 5%\" }}\n                class=\"resize-pic\"\n              />\n              <br/>\n\n              In order to build such a large matrix, we split it in half, working on one part at a time on 2 separate acrylic sheets.\n              Each strip, where one LED corresponded with one pixel, needed to be connected in a\n              snake/zig-zag pattern for wire conservation. The strips were laid on\n              each acrylic sheet, and we drilled holes for each RGB connection and soldered them to the next strip's \n              connections as seen above.\n              <br/>\n\n              <img\n                src={require(\"../media/led-matrix/test.jpg\")}\n                alt=\"Testing the display\"\n                style={{ margin: \"5% 5% 5% 5%\" }}\n                class=\"resize-pic\"\n              />\n              <br/>\n\n              <p>\n              We tested each half with <a href=\"https://github.com/adafruit/Adafruit_NeoPixel\" target=\"_blank\">Adafruit's NeoPixel</a> libraries by trying out\n              some default patterns before importing our own images. We also placed a frosted acrylic sheet on top in order to diffuse the bright LED lights. \n              </p>\n\n              <img\n                src={require(\"../media/led-matrix/connect.jpg\")}\n                alt=\"Joining the two halves\"\n                style={{ margin: \"5% 5% 5% 5%\" }}\n                class=\"resize-pic\"\n              />\n              <br/>\n\n              We \"connected\" the two halves by having each panel read off of two different pins on the Arduino Mega.\n              One pin would supply the half image data and the other pin would supply the image data for the other\n              half. This is where the Arduino Mega is very useful, as the size of the EEPROM is substantial enough to store\n              a full image.\n              <br/>\n\n              <img\n                src={require(\"../media/led-matrix/rainbow.jpg\")}\n                alt=\"Rainbow Display\"\n                style={{ margin: \"5% 5% 5% 5%\" }}\n                class=\"resize-pic\"\n              />\n              <br/>\n\n              <img\n                src={require(\"../media/led-matrix/tedx.jpg\")}\n                alt=\"TEDx Display\"\n                style={{ margin: \"5% 5% 5% 5%\" }}\n                class=\"resize-pic\"\n              />\n              <br/>\n\n              A python script was used to convert an image to a readable array of data for the Arduino. The desired\n              image needs to be scaled, altered to match the panel's zig-zag pattern, and have its RGB's extracted.\n              Above are some examples of images that were displayed. The storage size of the Mega also allows multiple\n              translated images to be flashed over, meaning small animations can be shown as well!\n              <br/>\n\n\n              <br/>\n              <h4 class=\"section-header\">Questions?</h4>\n              Feel free to email me if you have questions about the tech, process, anything. I'd love to \n              talk about lessons learned from this experience.\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  export default LedMatrix;","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport NavBar from \"./components/navBar.jsx\";\nimport Footer from \"./components/footer.jsx\";\nimport Home from \"./components/home.jsx\";\nimport About from \"./components/about.jsx\";\nimport DoorIntercom from \"./components/doorIntercom.jsx\";\nimport LEDMatrix from \"./components/ledMatrix.jsx\";\n// Find a better way to do this\nimport activeAlarmPic from \"./media/activealarm.jpg\";\nimport triviaMachinePic from \"./media/triviaMachine.jpg\";\nimport doorIntercomPic from \"./media/doorIntercom.jpg\";\nimport ledMatrixPic from \"./media/led-matrix/main.jpg\";\n\nvar projects = [\n  {\n    id: 1,\n    title: \"LED Matrix\",\n    link: \"/#/led-matrix\",\n    description:\n      \"A giant LED wall that can display any image, made for TEDxCMU\",\n    image: ledMatrixPic,\n  },\n  {\n    id: 2,\n    title: \"Active Alarm\",\n    link: \"https://courses.ideate.cmu.edu/60-223/f2019/work/active-alarm/\",\n    description:\n      \"An alarm clock designed to get you up and moving, made in 60-223\",\n    image: activeAlarmPic,\n  },\n  {\n    id: 3,\n    title: \"Trivia Machine\",\n    link:\n      \"https://courses.ideate.cmu.edu/60-223/f2019/work/trivia-machine-final-documentation/\",\n    description:\n      \"A buttonless trivia device that uses spatial sensing to record answers, made in 60-223\",\n    image: triviaMachinePic,\n  },\n  {\n    id: 4,\n    title: \"Door Intercom w/ Alexa\",\n    link: \"/#/door-intercom\",\n    description: \"See who's at the door with your Alexa\",\n    image: doorIntercomPic,\n  },\n];\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        <NavBar projects={projects} />\n\n        <Route exact path=\"/\" render={() => <Home projects={projects} />} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/door-intercom\" component={DoorIntercom} />\n        <Route path=\"/led-matrix\" component={LEDMatrix} />\n        <Footer />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}